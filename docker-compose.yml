version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./backend:/app
      - /app/build
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  serena-mcp:
    build:
      context: .
      dockerfile: Dockerfile.serena-mcp
    ports:
      - "8082:8080"
    environment:
      - SERENA_API_KEY=${SERENA_API_KEY:-}
      - SERENA_MODEL=${SERENA_MODEL:-gpt-4o-mini}
      - NODE_PATH=/usr/local/lib/node_modules
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
    volumes:
      - .:/workspace
      - node_modules:/usr/local/lib/node_modules
    profiles:
      - mcp

  language-server:
    build:
      context: .
      dockerfile: Dockerfile.language-server
    ports:
      - "8081:8081"
    environment:
      - LSP_PORT=8081
    volumes:
      - .:/workspace
    profiles:
      - mcp

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tsumiki_db
      POSTGRES_USER: tsumiki_user
      POSTGRES_PASSWORD: tsumiki_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  node_modules:
